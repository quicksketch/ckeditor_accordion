<?php

/**
 * @file
 * Adds accordion plugin to CKEditor 5.
 */

/**
 * Implements hook_ckeditor5_plugins().
 *
 * Register the CKEditor plugin - it appears in the plugins list of content
 * format settings.
 */
function ckeditor_accordion_ckeditor5_plugins() {
  $module_path = backdrop_get_path('module', 'ckeditor_accordion');
  $plugins['accordion.Accordion'] = array(
    'library' => array('ckeditor_accordion', 'ckeditor_accordion.plugin'),
    'buttons' => array(
      'accordion' => array(
        'label' => t('Accordion'),
        'image' => $module_path. '/plugins/accordion/icons/accordion.svg',
        'required_html' => array(
          '<dl class="ckeditor-accordion">',
          '<dd>',
          '<dt>',
          '<p>',
        ),
      ),
    ),
  );

  return $plugins;
}

/**
 * Implements hook_library_info().
 */
function ckeditor_accordion_library_info() {
  $module_path = backdrop_get_path('module', 'ckeditor_accordion');
  $libraries['ckeditor_accordion.plugin'] = array(
    'title' => 'CKEditor plugin to convert basic HTML tags to preferred tags.',
    'version' => '2.0',
    'css' => array(
      $module_path . '/plugins/accordion/accordion.css' => array(),
    ),
    'js' => array(
      $module_path . '/plugins/accordion/accordion.js' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_ckeditor5_config_alter().
 */
function ckeditor_accordion_ckeditor5_config_alter(array &$settings, $format) {
  // dsm($settings);
  // $settings['toolbar']['shouldNotGroupWhenFull'] = FALSE;
  // unset($settings['toolbar']['shouldNotGroupWhenFull']);
}

/**
 * Implements hook_menu().
 */
function ckeditor_accordion_menu() {
  $items = array();

  $items['admin/config/content/ckeditor_accordion'] = array(
    'title' => 'Administer CKEditor Accordion',
    'description' => 'Adminster CKEditor Accordion configuration',
    'page callback' => 'backdrop_get_form',
    'page arguments' => array('ckeditor_accordion_admin'),
    'access arguments' => array('administer filters'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

/**
 * Implements hook_config_info().
 */
function ckeditor_accordion_config_info() {
  $prefixes['ckeditor_accordion.settings'] = array(
    'label' => t('CKEditor Accordion settings'),
    'group' => t('Configuration'),
  );
  return $prefixes;
}

/**
 * Create settings page for the module.
 */
function ckeditor_accordion_admin() {
  $form = array();
  $form['#config'] = 'ckeditor_accordion.settings';

  $form['ckeditor_accordion_collapsed'] = array(
    '#type' => 'checkbox',
    '#title' => t('Collapse all tabs by default'),
    '#default_value' => config_get('ckeditor_accordion.settings', 'ckeditor_accordion_collapsed'),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_preprocess_HOOK().
 */
function ckeditor_accordion_preprocess_page(&$variables) {
  $config = config_get('ckeditor_accordion.settings', 'ckeditor_accordion_collapsed');
  if ($config) {
    backdrop_add_js(array('ckeditor_accordion' => array('collapseAll' => 1)), array('type' => 'setting'));
  }
}
